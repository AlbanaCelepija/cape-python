# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from typing import Iterable as typing___Iterable
from typing import List as typing___List
from typing import Optional as typing___Optional
from typing import Text as typing___Text
from typing import Tuple as typing___Tuple
from typing import Union as typing___Union
from typing import cast as typing___cast

from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
)
from google.protobuf.descriptor import (
    EnumDescriptor as google___protobuf___descriptor___EnumDescriptor,
)
from google.protobuf.internal.containers import (
    RepeatedCompositeFieldContainer as google___protobuf___internal___containers___RepeatedCompositeFieldContainer,
)
from google.protobuf.message import Message as google___protobuf___message___Message
from google.protobuf.timestamp_pb2 import (
    Timestamp as google___protobuf___timestamp_pb2___Timestamp,
)
from typing_extensions import Literal as typing_extensions___Literal

builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int
builtin___str = str
if sys.version_info < (3,):
    builtin___buffer = buffer
    builtin___unicode = unicode

class RecordType(builtin___int):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    @classmethod
    def Name(cls, number: builtin___int) -> builtin___str: ...
    @classmethod
    def Value(cls, name: builtin___str) -> "RecordType": ...
    @classmethod
    def keys(cls) -> typing___List[builtin___str]: ...
    @classmethod
    def values(cls) -> typing___List["RecordType"]: ...
    @classmethod
    def items(cls) -> typing___List[typing___Tuple[builtin___str, "RecordType"]]: ...
    DOCUMENT = typing___cast("RecordType", 0)

DOCUMENT = typing___cast("RecordType", 0)
global___RecordType = RecordType

class FieldType(builtin___int):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    @classmethod
    def Name(cls, number: builtin___int) -> builtin___str: ...
    @classmethod
    def Value(cls, name: builtin___str) -> "FieldType": ...
    @classmethod
    def keys(cls) -> typing___List[builtin___str]: ...
    @classmethod
    def values(cls) -> typing___List["FieldType"]: ...
    @classmethod
    def items(cls) -> typing___List[typing___Tuple[builtin___str, "FieldType"]]: ...
    BIGINT = typing___cast("FieldType", 0)
    BIT = typing___cast("FieldType", 2)
    VARBIT = typing___cast("FieldType", 3)
    BOOL = typing___cast("FieldType", 4)
    BOX = typing___cast("FieldType", 5)
    BYTEA = typing___cast("FieldType", 6)
    CHAR = typing___cast("FieldType", 7)
    VARCHAR = typing___cast("FieldType", 8)
    CIDR = typing___cast("FieldType", 9)
    CIRCLE = typing___cast("FieldType", 10)
    DATE = typing___cast("FieldType", 11)
    DOUBLE = typing___cast("FieldType", 12)
    INET = typing___cast("FieldType", 13)
    INT = typing___cast("FieldType", 14)
    INTERVAL = typing___cast("FieldType", 15)
    JSON = typing___cast("FieldType", 16)
    JSONB = typing___cast("FieldType", 17)
    LINE = typing___cast("FieldType", 18)
    LSEG = typing___cast("FieldType", 19)
    MACADDR = typing___cast("FieldType", 20)
    MACADDR8 = typing___cast("FieldType", 21)
    MONEY = typing___cast("FieldType", 22)
    NUMERIC = typing___cast("FieldType", 23)
    PATH = typing___cast("FieldType", 24)
    PGLSN = typing___cast("FieldType", 25)
    POINT = typing___cast("FieldType", 26)
    POLYGON = typing___cast("FieldType", 27)
    REAL = typing___cast("FieldType", 28)
    SMALLINT = typing___cast("FieldType", 29)
    TEXT = typing___cast("FieldType", 32)
    TIME = typing___cast("FieldType", 33)
    TIMETZ = typing___cast("FieldType", 34)
    TIMESTAMP = typing___cast("FieldType", 35)
    TIMESTAMPTZ = typing___cast("FieldType", 36)
    TSQUERY = typing___cast("FieldType", 37)
    TSVECTOR = typing___cast("FieldType", 38)
    TXIDSNAPSHOT = typing___cast("FieldType", 39)
    UUID = typing___cast("FieldType", 40)
    XML = typing___cast("FieldType", 41)

BIGINT = typing___cast("FieldType", 0)
BIT = typing___cast("FieldType", 2)
VARBIT = typing___cast("FieldType", 3)
BOOL = typing___cast("FieldType", 4)
BOX = typing___cast("FieldType", 5)
BYTEA = typing___cast("FieldType", 6)
CHAR = typing___cast("FieldType", 7)
VARCHAR = typing___cast("FieldType", 8)
CIDR = typing___cast("FieldType", 9)
CIRCLE = typing___cast("FieldType", 10)
DATE = typing___cast("FieldType", 11)
DOUBLE = typing___cast("FieldType", 12)
INET = typing___cast("FieldType", 13)
INT = typing___cast("FieldType", 14)
INTERVAL = typing___cast("FieldType", 15)
JSON = typing___cast("FieldType", 16)
JSONB = typing___cast("FieldType", 17)
LINE = typing___cast("FieldType", 18)
LSEG = typing___cast("FieldType", 19)
MACADDR = typing___cast("FieldType", 20)
MACADDR8 = typing___cast("FieldType", 21)
MONEY = typing___cast("FieldType", 22)
NUMERIC = typing___cast("FieldType", 23)
PATH = typing___cast("FieldType", 24)
PGLSN = typing___cast("FieldType", 25)
POINT = typing___cast("FieldType", 26)
POLYGON = typing___cast("FieldType", 27)
REAL = typing___cast("FieldType", 28)
SMALLINT = typing___cast("FieldType", 29)
TEXT = typing___cast("FieldType", 32)
TIME = typing___cast("FieldType", 33)
TIMETZ = typing___cast("FieldType", 34)
TIMESTAMP = typing___cast("FieldType", 35)
TIMESTAMPTZ = typing___cast("FieldType", 36)
TSQUERY = typing___cast("FieldType", 37)
TSVECTOR = typing___cast("FieldType", 38)
TXIDSNAPSHOT = typing___cast("FieldType", 39)
UUID = typing___cast("FieldType", 40)
XML = typing___cast("FieldType", 41)
global___FieldType = FieldType

class QueryRequest(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    data_source = ...  # type: typing___Text
    query = ...  # type: typing___Text
    limit = ...  # type: builtin___int
    offset = ...  # type: builtin___int
    def __init__(
        self,
        *,
        data_source: typing___Optional[typing___Text] = None,
        query: typing___Optional[typing___Text] = None,
        limit: typing___Optional[builtin___int] = None,
        offset: typing___Optional[builtin___int] = None,
    ) -> None: ...
    if sys.version_info >= (3,):
        @classmethod
        def FromString(cls, s: builtin___bytes) -> QueryRequest: ...
    else:
        @classmethod
        def FromString(
            cls, s: typing___Union[builtin___bytes, builtin___buffer, builtin___unicode]
        ) -> QueryRequest: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def ClearField(
        self,
        field_name: typing_extensions___Literal[
            "data_source",
            b"data_source",
            "limit",
            b"limit",
            "offset",
            b"offset",
            "query",
            b"query",
        ],
    ) -> None: ...

global___QueryRequest = QueryRequest

class Record(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    @property
    def schema(self) -> global___Schema: ...
    @property
    def fields(
        self,
    ) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[
        global___Field
    ]: ...
    def __init__(
        self,
        *,
        schema: typing___Optional[global___Schema] = None,
        fields: typing___Optional[typing___Iterable[global___Field]] = None,
    ) -> None: ...
    if sys.version_info >= (3,):
        @classmethod
        def FromString(cls, s: builtin___bytes) -> Record: ...
    else:
        @classmethod
        def FromString(
            cls, s: typing___Union[builtin___bytes, builtin___buffer, builtin___unicode]
        ) -> Record: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def HasField(
        self, field_name: typing_extensions___Literal["schema", b"schema"]
    ) -> builtin___bool: ...
    def ClearField(
        self,
        field_name: typing_extensions___Literal[
            "fields", b"fields", "schema", b"schema"
        ],
    ) -> None: ...

global___Record = Record

class Field(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    int32 = ...  # type: builtin___int
    int64 = ...  # type: builtin___int
    float = ...  # type: builtin___float
    double = ...  # type: builtin___float
    string = ...  # type: typing___Text
    bytes = ...  # type: builtin___bytes
    bool = ...  # type: builtin___bool
    @property
    def timestamp(self) -> google___protobuf___timestamp_pb2___Timestamp: ...
    def __init__(
        self,
        *,
        int32: typing___Optional[builtin___int] = None,
        int64: typing___Optional[builtin___int] = None,
        timestamp: typing___Optional[
            google___protobuf___timestamp_pb2___Timestamp
        ] = None,
        float: typing___Optional[builtin___float] = None,
        double: typing___Optional[builtin___float] = None,
        string: typing___Optional[typing___Text] = None,
        bytes: typing___Optional[builtin___bytes] = None,
        bool: typing___Optional[builtin___bool] = None,
    ) -> None: ...
    if sys.version_info >= (3,):
        @classmethod
        def FromString(cls, s: builtin___bytes) -> Field: ...
    else:
        @classmethod
        def FromString(
            cls, s: typing___Union[builtin___bytes, builtin___buffer, builtin___unicode]
        ) -> Field: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions___Literal[
            "bool",
            b"bool",
            "bytes",
            b"bytes",
            "double",
            b"double",
            "float",
            b"float",
            "int32",
            b"int32",
            "int64",
            b"int64",
            "string",
            b"string",
            "timestamp",
            b"timestamp",
            "value",
            b"value",
        ],
    ) -> builtin___bool: ...
    def ClearField(
        self,
        field_name: typing_extensions___Literal[
            "bool",
            b"bool",
            "bytes",
            b"bytes",
            "double",
            b"double",
            "float",
            b"float",
            "int32",
            b"int32",
            "int64",
            b"int64",
            "string",
            b"string",
            "timestamp",
            b"timestamp",
            "value",
            b"value",
        ],
    ) -> None: ...
    def WhichOneof(
        self, oneof_group: typing_extensions___Literal["value", b"value"]
    ) -> typing_extensions___Literal[
        "int32", "int64", "timestamp", "float", "double", "string", "bytes", "bool"
    ]: ...

global___Field = Field

class Schema(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    data_source = ...  # type: typing___Text
    target = ...  # type: typing___Text
    type = ...  # type: global___RecordType
    @property
    def fields(
        self,
    ) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[
        global___FieldInfo
    ]: ...
    def __init__(
        self,
        *,
        data_source: typing___Optional[typing___Text] = None,
        target: typing___Optional[typing___Text] = None,
        type: typing___Optional[global___RecordType] = None,
        fields: typing___Optional[typing___Iterable[global___FieldInfo]] = None,
    ) -> None: ...
    if sys.version_info >= (3,):
        @classmethod
        def FromString(cls, s: builtin___bytes) -> Schema: ...
    else:
        @classmethod
        def FromString(
            cls, s: typing___Union[builtin___bytes, builtin___buffer, builtin___unicode]
        ) -> Schema: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def ClearField(
        self,
        field_name: typing_extensions___Literal[
            "data_source",
            b"data_source",
            "fields",
            b"fields",
            "target",
            b"target",
            "type",
            b"type",
        ],
    ) -> None: ...

global___Schema = Schema

class FieldInfo(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    field = ...  # type: global___FieldType
    size = ...  # type: builtin___int
    name = ...  # type: typing___Text
    def __init__(
        self,
        *,
        field: typing___Optional[global___FieldType] = None,
        size: typing___Optional[builtin___int] = None,
        name: typing___Optional[typing___Text] = None,
    ) -> None: ...
    if sys.version_info >= (3,):
        @classmethod
        def FromString(cls, s: builtin___bytes) -> FieldInfo: ...
    else:
        @classmethod
        def FromString(
            cls, s: typing___Union[builtin___bytes, builtin___buffer, builtin___unicode]
        ) -> FieldInfo: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def ClearField(
        self,
        field_name: typing_extensions___Literal[
            "field", b"field", "name", b"name", "size", b"size"
        ],
    ) -> None: ...

global___FieldInfo = FieldInfo

class VersionRequest(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    def __init__(self,) -> None: ...
    if sys.version_info >= (3,):
        @classmethod
        def FromString(cls, s: builtin___bytes) -> VersionRequest: ...
    else:
        @classmethod
        def FromString(
            cls, s: typing___Union[builtin___bytes, builtin___buffer, builtin___unicode]
        ) -> VersionRequest: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...

global___VersionRequest = VersionRequest

class VersionResponse(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    version = ...  # type: typing___Text
    build_date = ...  # type: typing___Text
    def __init__(
        self,
        *,
        version: typing___Optional[typing___Text] = None,
        build_date: typing___Optional[typing___Text] = None,
    ) -> None: ...
    if sys.version_info >= (3,):
        @classmethod
        def FromString(cls, s: builtin___bytes) -> VersionResponse: ...
    else:
        @classmethod
        def FromString(
            cls, s: typing___Union[builtin___bytes, builtin___buffer, builtin___unicode]
        ) -> VersionResponse: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def ClearField(
        self,
        field_name: typing_extensions___Literal[
            "build_date", b"build_date", "version", b"version"
        ],
    ) -> None: ...

global___VersionResponse = VersionResponse
